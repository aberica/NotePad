/*
메모리제한 : STACK 최대 1MB
제출횟수 : 10회

test() 함수를 작성하라.
SCORE 값이 작을수록 높은 점수를 부여한다.

1. 본 검정은 C++만 지원한다.
2. input 파일은 사용되지 않는다.
3. User Code 내 malloc.h 를 제외한 어떠한 헤더파일도 추가할 수 없다.
4. Main 코드는 수정되지 않으며 채점 시 그대로 사용된다.
5. 본 검정은 대단히 엄격한 코드 리뷰를 수행한다.

*/
#include <stdio.h>
#include <time.h>

void test(void);

static const int MAX_SAMPLE = 50000000;
static double SCORE = 0.0;
static int tray[2 * MAX_SAMPLE];

static unsigned int rand(void) {
	static unsigned long long seed = 5;
	seed = seed * 25214903917ULL + 11ULL;
	return (unsigned int)(seed >> 16);
}

int covid_checkup(int n) {
	SCORE += 1.0;
	if (n < 0 || n >= 2 * MAX_SAMPLE) return 0;
	if (tray[n] == 0) return 0;
	return 1;
}

void culture(int n, int a, int b) {
	if (n<MAX_SAMPLE || n>=2*MAX_SAMPLE) return;
	tray[n] = tray[a] | tray[b];
}

void clear(int n) {
	SCORE += 10.0;
	if (n < 0 || n >= 2 * MAX_SAMPLE) return;
	tray[n] = 0;
}

int main(void) {
	for (register int c = 0; c < 2 * MAX_SAMPLE; c++) tray[c] = 0;
	for (register int c = 0; c <  MAX_SAMPLE/1000; c++) tray[rand() % MAX_SAMPLE] = 1;

	clock_t time = clock();
	test();
	SCORE += (double)(clock() - time) / CLOCKS_PER_SEC / 100;

	for (register int c = 0; c < MAX_SAMPLE; c++) {
		if (tray[c]) SCORE += 10000.0;
	}
	printf("SCORE : %.3f\n", SCORE);
	return 0;
	
}

////////////////////////////////////////////////////////////

static const int MAX_SAMPLE = 50000000;
extern int covid_checkup(int n);
extern void culture(int n, int a, int b);
extern void clear(int n);
void test(void) {
	for (int i = 0; i < MAX_SAMPLE; i++)
		if (covid_checkup(i)) clear(i);
}
